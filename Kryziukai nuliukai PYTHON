def print_board(board):
    for row in board:
        print(' '.join(row))

def check_win(board, player):
    for row in board:
        if all(symbol == player for symbol in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_draw(board):
    return all(symbol != ' ' for row in board for symbol in row)

def player_move(board, player):
    while True:
        print_board(board)
        print(f"Žaidejo {player}, eilė.")
        row = int(input("Iveskite eilute (1-3): ")) - 1
        col = int(input("Iveskite žingsni (1-3): ")) - 1
        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
            return row, col
        print("Klaidingas ejimas. Bandykite dar karta.")

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    current_player = players[0]

    while True:
        row, col = player_move(board, current_player)
        board[row][col] = current_player

        if check_win(board, current_player):
            print_board(board)
            print(f"Žaidejas {current_player} laimėjo!")
            break
        elif is_draw(board):
            print_board(board)
            print("Lygiosios!")
            break

        current_player = players[(players.index(current_player) + 1) % 2]

if __name__ == "__main__":
    main()
